# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']
    # Extended registration form.
    app.form.registration:
        class: AppBundle\Form\RegistrationFormType
        tags:
            - { name: form.type }
    # Extended profile form.
    app.form.profile:
        class: AppBundle\Form\ProfileFormType
        tags:
            - { name: form.type }
    # Service to help with content types.
    app.content_types:
        class: AppBundle\Helper\ContentTypes
        public: true
    # Service to help with data tables on the client.
    app.data_tables:
        class: AppBundle\Helper\DataTableHelper
        public: true
    # Service to help with roles.
    app.roles:
        class: AppBundle\Helper\Roles
        public: true
    # Service to help with file processing.
    app.file_helper:
        class: AppBundle\Helper\FileHelper
        arguments: ['@service_container']
        public: true
    # Service to help build nav links between lessons.
    app.lesson_nav_link_helper:
        class: AppBundle\Helper\LessonNavLinkHelper
        arguments: ['@doctrine.orm.entity_manager', '@security.token_storage']
        public: true
    # Service to help with users.
    app.user_helper:
        class: AppBundle\Helper\UserHelper
        arguments: ['@security.token_storage']
        public: true
    # Service to make lesson trees.
    app.lesson_tree_maker:
        class: AppBundle\Helper\LessonTreeMaker
        arguments: ['@doctrine.orm.entity_manager', '@app.user_helper', '@router']
        public: true
    app.user_activity_logger:
        class: AppBundle\Helper\UserActivityLogHelper
        arguments: ['@doctrine.orm.entity_manager', '@app.user_helper']
        public: true
    Monolog\Formatter\JsonFormatter: ~
#    app.user_activity_logger:
#        class: AppBundle\Helper\UserActivityLogDBHandler
#        arguments: ['@doctrine.orm.entity_manager', '@app.user_helper', '@router']
        #    app.twig.custom_extension:
#        class: AppBundle\Twig\Extension\RoleDisplay
#        public: true
#        tags:
#            - { name: twig.extension }
    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
#    AppBundle\Service\RstTransformer:
#        class: AppBundle\Service\RstTransformer
#        public: true
#    AppBundle\Service\RstCustomDirectives\Directives\DogBlock:
#        class: Gregwar\RST\Directives\DogBlock
#        public: true
#    Gregwar\RST\Nodes\DogNode:
#        class: AppBundle\Service\RstCustomDirectives\Nodes\DogNode
#        public: true
